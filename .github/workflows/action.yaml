name: Build and deploy workflow
on:
  push:
    branches:
      - main
      - deploy
jobs:
  build_and_push_back:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build back
        run: |
          cd backend_django
          docker build . -t kpaveliev/skypro-c05-cw05-backend:$GITHUB_REF_NAME-$GITHUB_RUN_ID -f Dockerfile
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push kpaveliev/skypro-c05-cw05-backend:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  build_and_push_front:
    runs-on: ubuntu-latest
    needs: build_and_push_back
    steps:
    - name: clone code
      uses: actions/checkout@v2
    - name: docker build front
      run: |
        cd frontend_react
        docker build . -t kpaveliev/skypro-c05-cw05-frontend:$GITHUB_REF_NAME-$GITHUB_RUN_ID -f Dockerfile
    - name: docker login
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: docker push
      run: docker push kpaveliev/skypro-c05-cw05-frontend:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_front
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render docker-compose
        run: cat deploy/docker-compose.dev.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/nginx.conf"
          target: "avito"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd avito
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker-compose up -d
