version: '3.8'

services:
  db:
    image: postgres:12.4-alpine
    volumes:
      - ../postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - db_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5


  migrations:
    build: ../backend_django
    depends_on:
      db:
        condition: service_healthy
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_ENGINE: ${DB_ENGINE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DEBUG_MODE: ${DB_MODE}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py loadall"
    networks:
      - db_network


  api:
    build: ../backend_django
    image: backend_django_migrations:latest
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_ENGINE: ${DB_ENGINE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DEBUG_MODE: ${DB_MODE}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    networks:
      - nginx_network
      - db_network


  nginx:
    image: nginx:1.19.3
    ports:
      - "8000:8000"
      - "3000:3000"
    volumes:
      - ../backend_django/django_static/:/usr/share/nginx/html/django_static/
      - ../backend_django/django_media/:/usr/share/nginx/html/django_media/
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/
    restart: always
    depends_on:
      - db
      - frontend
    networks:
      - nginx_network


volumes:
  postgres_data:
  frontend:


networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge


